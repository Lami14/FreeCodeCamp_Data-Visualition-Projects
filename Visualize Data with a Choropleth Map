<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Choropleth Map</title>
  <script src="https://d3js.org/d3.v6.min.js"></script>
  <style>
    body { font-family: Arial, sans-serif; text-align: center; }
    .county { stroke: #fff; stroke-width: 0.5; }
    #tooltip { position: absolute; background: lightgray; padding: 5px; border: 1px solid #333; display: none; }
    #legend rect { stroke: #000; stroke-width: 0.5; }
  </style>
</head>
<body>
  <h1 id="title">United States Educational Attainment</h1>
  <p id="description">Percentage of adults age 25 and older with a bachelor's degree or higher (2010-2014)</p>
  <div id="tooltip"></div>
  <svg id="choropleth" width="960" height="600"></svg>
  <svg id="legend" width="300" height="50"></svg>

  <script>
    const width = 960, height = 600;
    const svg = d3.select("#choropleth");
    const tooltip = d3.select("#tooltip");

    Promise.all([
      d3.json('https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/counties.json'),
      d3.json('https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/for_user_education.json')
    ]).then(([us, education]) => {
      const educationData = new Map(education.map(d => [d.fips, d]));

      const colorScale = d3.scaleQuantize()
        .domain([2.6, 75.1])
        .range(d3.schemeBlues[5]);

      svg.append("g")
        .selectAll("path")
        .data(topojson.feature(us, us.objects.counties).features)
        .enter().append("path")
        .attr("class", "county")
        .attr("data-fips", d => d.id)
        .attr("data-education", d => educationData.get(d.id)?.bachelorsOrHigher || 0)
        .attr("fill", d => colorScale(educationData.get(d.id)?.bachelorsOrHigher))
        .attr("d", d3.geoPath())
        .on("mouseover", (event, d) => {
          const edu = educationData.get(d.id);
          tooltip.style("display", "block")
            .attr("data-education", edu?.bachelorsOrHigher)
            .html(`${edu?.area_name}, ${edu?.state}: ${edu?.bachelorsOrHigher}%`)
            .style("left", `${event.pageX + 5}px`)
            .style("top", `${event.pageY - 28}px`);
        })
        .on("mouseout", () => tooltip.style("display", "none"));

      const legend = d3.select("#legend");
      const legendScale = d3.scaleLinear().domain(colorScale.domain()).range([0, 300]);
      const legendAxis = d3.axisBottom(legendScale).ticks(4);

      legend.selectAll("rect")
        .data(colorScale.range())
        .enter().append("rect")
        .attr("x", (d, i) => i * 60)
        .attr("width", 60)
        .attr("height", 20)
        .attr("fill", d => d);

      legend.append("g")
        .attr("transform", "translate(0,20)")
        .call(legendAxis);
    });
  </script>
</body>
</html>
