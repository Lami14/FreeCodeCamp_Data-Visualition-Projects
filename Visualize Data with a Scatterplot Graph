<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Scatterplot Graph</title>
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      text-align: center;
    }

    #title {
      font-size: 2em;
      margin: 20px 0;
      color: #333;
    }

    svg {
      background: white;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin: auto;
      display: block;
    }

    .dot {
      fill: steelblue;
      stroke: #333;
    }

    #legend {
      font-size: 1em;
      fill: black;
      margin-top: 10px;
    }

    #tooltip {
      position: absolute;
      background: rgba(0, 0, 0, 0.7);
      color: #fff;
      padding: 5px;
      border-radius: 5px;
      pointer-events: none;
      visibility: hidden;
    }
  </style>
</head>
<body>
  <h1 id="title">Doping in Professional Cycling</h1>
  <div id="tooltip"></div>
  <svg width="800" height="500"></svg>
  <div id="legend">Legend: Blue - No Allegations, Red - Doping Allegations</div>

  <script>
    const url = 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json';
    const width = 800, height = 500, padding = 60;

    const svg = d3.select('svg');
    const tooltip = d3.select('#tooltip');

    d3.json(url).then(data => {
      data.forEach(d => {
        d.Year = new Date(d.Year, 0);
        const timeParts = d.Time.split(":");
        d.Time = new Date(1970, 0, 1, 0, timeParts[0], timeParts[1]);
      });

      const xScale = d3.scaleTime()
        .domain(d3.extent(data, d => d.Year))
        .range([padding, width - padding]);

      const yScale = d3.scaleTime()
        .domain(d3.extent(data, d => d.Time))
        .range([padding, height - padding]);

      const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat('%Y'));
      const yAxis = d3.axisLeft(yScale).tickFormat(d3.timeFormat('%M:%S'));

      svg.append('g')
        .attr('id', 'x-axis')
        .attr('transform', `translate(0, ${height - padding})`)
        .call(xAxis);

      svg.append('g')
        .attr('id', 'y-axis')
        .attr('transform', `translate(${padding}, 0)`)
        .call(yAxis);

      svg.selectAll('.dot')
        .data(data)
        .enter()
        .append('circle')
        .attr('class', 'dot')
        .attr('cx', d => xScale(d.Year))
        .attr('cy', d => yScale(d.Time))
        .attr('r', 6)
        .attr('data-xvalue', d => d.Year.getFullYear())
        .attr('data-yvalue', d => d.Time.toISOString())
        .attr('fill', d => d.Doping ? 'red' : 'blue')
        .on('mouseover', (event, d) => {
          tooltip.style('visibility', 'visible')
            .style('left', `${event.pageX + 10}px`)
            .style('top', `${event.pageY - 30}px`)
            .attr('data-year', d.Year.getFullYear())
            .html(`${d.Name}: ${d.Nationality}<br>Year: ${d.Year.getFullYear()}, Time: ${d3.timeFormat('%M:%S')(d.Time)}<br>${d.Doping}`);
        })
        .on('mouseout', () => tooltip.style('visibility', 'hidden'));
    });
  </script>
</body>
</html>
